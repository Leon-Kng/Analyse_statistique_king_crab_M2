---
title: "Rapport de projet MOST"
author: "Koenig Léon et Heier Noah"
date: "12/01/2024"
output:
  html_document:
    theme: readable
    toc: yes
    number_sections: 3
    toc_float: yes
    highlight: tango
  pdf_document:
    toc: yes
    number_sections: 3
subtitle: ''
header-includes: \renewcommand{\contentsname}{Table des matières}
encoding: "UTF-8"
---

<style>
  body {
    font-size: 12px; /* Changer cette valeur en fonction de la taille de police souhaitée */
  }
</style>

```{r setup, include=FALSE}
# Ce code, non inclus dans la sortie (car on a spécifié include = FALSE)
# permet de spécifier toutes les options par défaut pour les chunks
knitr::opts_chunk$set(echo = FALSE, # Ici, par défaut, les chunks seront invisibles
                      eval = TRUE, # Tous les chunks sont évalués par défaut
                      fig.align = "center", # Les figures sont centrées
                      fig.width = 8,
                      fig.height = 6, 
          class.source = "small",
                      message = FALSE, # Les messages de R ne sont pas sortis
                      warning = FALSE) # Les avertissement de R ne sont pas sortis
knitr::opts_knit$set(root.dir = "~/cours/M2/MOST/projet/KingCrab-20231110") # pour rendre le working directory persistant d'un chunk de code à l'autre
```

```{r initialisation}
rm(list=ls())

# Liste des package utilisés 
library(ggplot2) 
library(tidyverse)
library(bestNormalize)
library(RColorBrewer)
library(plotly)
library(gridExtra)
library(gganimate)

```

```{r Chargement des données, echo=F}

survey <- read.table("survey", stringsAsFactors=T)
survey <-rename(survey,year = V1, fishing_district = V2,Station_ID=V3,pots_fished=V4,latitude_halfway_pot=V5,longitude_halfway_pot=V6,pre_recruit_4=V7,pre_recruit_3=V8,pre_recruit_2=V9,pre_recruit_1=V10,recruit_males=V11,post_recruit=V12,juv_fem=V13,adu_fem=V14)

kodiak <- read.table("kodiak",stringsAsFactors=T)
kodiak <-rename(kodiak, latitude= V1, longitude = V2)

dstns <- read.table("dstns",stringsAsFactors=T)
dstns <-rename(dstns,year = V1, length_mm = V2 , count_juv_f=V3,count_adu_f=V4 ,count_males=V5)

fleet <- read.table("fleet",stringsAsFactors=T)
fleet <-rename(fleet,year= V1, nbr_vessels = V2, crabs_caught=V3,total_weight_caught=V4,total_pot_lifts=V5,price_pound=V6)

catch <- read.table("catch", stringsAsFactors=T)
catch <-rename(catch,year = V1,  district= V2, total_count=V3, total_kg=V4)

eggs <- read.table("eggs",stringsAsFactors=T)
eggs <-rename(eggs, year= V1, estim_eggs_per_adu_f=V2)

salinity <- read.table("salinity",stringsAsFactors=T)
salinity<-rename(salinity,year = V1, month = V2,salinity=V3)

celsius <- read.table("celsius",stringsAsFactors=T)
celsius <-rename(celsius,year = V1, month = V2,temp=V3)

fullness <- read.table("fullness",stringsAsFactors=T)
fullness <-rename(fullness, year= V1, size_mm= V2,fullness0=V3,fullness1_29=V4,fullness30_59=V5,fullness60_89=V6,fullness90_100=V7)

```
```{r Modifcation des données, echo=F}
# Survey
survey$year <- paste0("19", survey$year) # ajout de 19 devant les nb pour avoir une année
survey$year <- as.numeric(survey$year)
survey$fishing_district <- as.factor(survey$fishing_district)
survey <- survey |> # on divise les données par le nb de casiers utilisés afin de tenir compte de l'effort d'échantillonnage
  mutate(year = year,
         fishing_district = fishing_district,
         Station_ID = Station_ID,
         pots_fished = pots_fished,
         latitude_halfway_pot = latitude_halfway_pot,
         longitude_halfway_pot = longitude_halfway_pot,
         pre_recruit_4_per_pot = pre_recruit_4/pots_fished,
         pre_recruit_3_per_pot = pre_recruit_3/pots_fished,
         pre_recruit_2_per_pot = pre_recruit_2/pots_fished,
         pre_recruit_1_per_pot = pre_recruit_1/pots_fished,
         recruit_males_per_pot = recruit_males/pots_fished,
         post_recruit_per_pot = post_recruit/pots_fished,
         juv_fem_per_pot = juv_fem/pots_fished,
         adu_fem_per_pot = adu_fem/pots_fished) |>  
  mutate(legal_males_per_pot = post_recruit_per_pot + recruit_males_per_pot,
         juv_males_per_pot = pre_recruit_1_per_pot + pre_recruit_2_per_pot + pre_recruit_3_per_pot + pre_recruit_4_per_pot,
         total_crabs_per_pot = juv_fem_per_pot + juv_males_per_pot + legal_males_per_pot + adu_fem_per_pot)

survey_simplified <- survey |> 
  group_by(year) |>
  summarise(legal_males = sum(legal_males_per_pot), 
            adu_fem = sum(adu_fem_per_pot),
            juv_fem = sum(juv_fem_per_pot),
            juv_males = sum(juv_males_per_pot),
            pre_recruit_1 = sum(pre_recruit_1_per_pot),
            pre_recruit_2 = sum(pre_recruit_2_per_pot),
            pre_recruit_3 = sum(pre_recruit_3_per_pot),
            pre_recruit_4 = sum(pre_recruit_4_per_pot),
            total_crabs = sum(total_crabs_per_pot),
            
            legal_males_pp = mean(legal_males_per_pot), 
            adu_fem_pp = mean(adu_fem_per_pot),
            juv_fem_pp = mean(juv_fem_per_pot),
            juv_males_pp = mean(juv_males_per_pot),
            pre_recruit_1_pp = mean(pre_recruit_1_per_pot),
            pre_recruit_2_pp = mean(pre_recruit_2_per_pot),
            pre_recruit_3_pp = mean(pre_recruit_3_per_pot),
            pre_recruit_4_pp = mean(pre_recruit_4_per_pot),
            total_crabs_pp = mean(total_crabs_per_pot)
  ) |> 
  mutate(sex_ratio = (juv_males + legal_males)/(juv_fem + adu_fem))

survey_long_category <- survey |> 
  select(year, legal_males_per_pot, adu_fem_per_pot, juv_fem_per_pot, juv_males_per_pot) |> 
  pivot_longer(cols = c(legal_males_per_pot, adu_fem_per_pot, juv_fem_per_pot, juv_males_per_pot), names_to = "crab_category", values_to = "nb_crabs_per_pot")

survey_long_category$crab_category <- str_remove(survey_long_category$crab_category, "_per_pot")

# Celsius
celsius$year <- paste0("19", celsius$year) # ajout de 19 devant les nb pour avoir une année

celsius <- celsius |>
  mutate(
    saison = case_when(
      month %in% c(12, 1, 2) ~ "hiver",
      month %in% c(3, 4, 5) ~ "printemps",
      month %in% c(6, 7, 8) ~ "été",
      month %in% c(9, 10, 11) ~ "automne",)) |>
  select(-month)
celsius$saison <- as.factor(celsius$saison)
celsius$year <- as.numeric(celsius$year)

celsius_simplified <- celsius |> 
  group_by(year, saison) |>
  summarize(temp_moy = mean(temp)) |> 
  pivot_wider(names_from = saison, values_from = temp_moy) |>
  rename(temp_moy_hiver = hiver,
         temp_moy_automne = automne,
         temp_moy_été = été,
         temp_moy_printemps = printemps)


celsius_simplified$year<- as.numeric(celsius_simplified$year)
df_global <- left_join(survey_simplified, celsius_simplified, by = "year")

celsius_more_simplified <- celsius |> 
  group_by(year) |>
  summarise(temp_moy = mean(temp, na.rm = TRUE)) # calcul de la température moyenne pour chaque année

celsius_more_simplified$year <- as.numeric(celsius_more_simplified$year)
df_global <- left_join(df_global, celsius_more_simplified, by = "year")


# Salinity
salinity$year <- paste0("19", salinity$year)
salinity$year<- as.numeric(salinity$year)
salinity$month<- as.factor(salinity$month)
salinity$salinity<- as.numeric(salinity$salinity)

salinity <- salinity |>
  mutate(saison = case_when(
    month %in% c(12, 1, 2) ~ "hiver",
    month %in% c(3, 4, 5) ~ "printemps",
    month %in% c(6, 7, 8) ~ "été",
    month %in% c(9, 10, 11) ~ "automne")) |> 
  select(-month)

salinity_simplified <- salinity |> 
  group_by(year, saison) |>
  summarize(sal_moy = mean(salinity)) |> 
  pivot_wider(names_from = saison, values_from = sal_moy) |>
  rename(sal_moy_hiver = hiver,
         sal_moy_automne = automne,
         sal_moy_été = été,
         sal_moy_printemps = printemps)
salinity$saison<- as.factor(salinity$saison)

df_global <- left_join(df_global, salinity_simplified, by = "year")

salinity_more_simplified <- salinity |> 
  group_by(year) |>
  summarise(sal_moy = mean(salinity, na.rm = TRUE)) # calcul de la salinité moyenne pour chaque année

salinity_more_simplified$year <- as.numeric(salinity_more_simplified$year)
df_global <- left_join(df_global, salinity_more_simplified, by = "year")


# Catch
catch$year <- paste0("19", catch$year)
catch$year <- as.numeric(catch$year)
catch_simplified <- catch |> 
  group_by(year) |>
  summarize(total_count = sum(total_count), 
            total_kg = sum(total_kg))


# Fleet 
fleet$year <- paste0("19", fleet$year)
fleet$year <- as.numeric(fleet$year)
fleet$prev_year <- fleet$year - 1
fleet_simplified <- fleet[,c(1,2,3)]
fleet_simplified$year <- fleet_simplified$year+1 # ajout d'une année puis on modifiera le nom de la colonne pour donner le nb de crabes pêchés l'année précédente
fleet_simplified <- rename(fleet_simplified, crabs_caught_last_year = crabs_caught)
fleet_simplified$year <- as.numeric(fleet_simplified$year)

df_global <- left_join(df_global, fleet_simplified, by = "year")
df_global <- left_join(df_global, fleet[,c(1,6)], by = "year") # ajout du prix à df_global

# Catch

diff_catch_fleet <- data.frame(year = fleet$year, delta_count = (fleet$crabs_caught - catch_simplified$total_count), delta_kg = fleet$total_weight_caught - catch_simplified$total_kg) # on compare fleet et catch pour être sûr que l'on a pas d'erreur
# on remarque que pour 1974 on a 2 valeurs pour le districts 1 mais différentes, pour corriger cela on peut faire une moyenne des 2 mais cela reste imparfait
catch[15,3:4] <- colSums(catch[c(15,16),3:4])/2
catch[39,3:4] <- colSums(catch[c(39,40),3:4])/2
catch[63,3:4] <- colSums(catch[c(63,64),3:4])/2
catch[87,3:4] <- colSums(catch[c(87,88),3:4])/2
catch <- catch[-c(16,40,64,88),]
catch$district <- as.factor(catch$district)

catch_simplified <- group_by(catch, year) |>
  summarize(total_count = sum(total_count), total_kg = sum(total_kg))

# Eggs
eggs$year <- paste0("19", eggs$year)
eggs$year <- as.numeric(eggs$year)
df_global <- left_join(df_global, eggs, by = "year")



# Dstns
dstns$year <- paste0("19", dstns$year)
dstns$year <- as.numeric(dstns$year)

dstns_long <- dstns |>
  mutate(count_F = count_juv_f + count_adu_f,
         count_M = count_males) |> 
  select(-count_juv_f, -count_adu_f, -count_males) |> 
  pivot_longer(
    cols = starts_with("count"),
    names_to = "sex",
    values_to = "count"
  ) |>
  mutate(sex = ifelse(sex == "count_F", "F", "M")) |>
  uncount(count)

dstns_long <- left_join(dstns_long, celsius_more_simplified, by="year")
dstns_long <- left_join(dstns_long, salinity_more_simplified, by="year")

dstns_sum <- dstns |>
  group_by(year) |>
  mutate(count_f = count_juv_f + count_adu_f)

dstns_simplified <- dstns_sum|> 
  summarize(
    length_moy_juv_F = sum(length_mm * count_juv_f) / sum(count_juv_f),
    length_moy_adu_F = sum(length_mm * count_adu_f) / sum(count_adu_f),
    length_moy_M = sum(length_mm * count_males) / sum(count_males),
    length_moy_F = sum(length_mm * count_f) / sum(count_f))

dstns_simplified_long <- dstns_simplified |> 
  select(-length_moy_adu_F, - length_moy_juv_F) |> 
  pivot_longer(cols = -year, 
               names_to = "sex", 
               names_prefix = "length_moy_",
               values_to = "length_moy")

dstns_simplified_long <- left_join(dstns_simplified_long, celsius_more_simplified, by="year")
dstns_simplified_long <- left_join(dstns_simplified_long, salinity_more_simplified, by="year")

df_global <- left_join(df_global, dstns_simplified, by = "year")

# Fullness
fullness$year <- paste0("19", fullness$year)
fullness$year <- as.numeric(fullness$year)
fullness_simplified <- fullness |>
  group_by(year) |>
  summarize(
    size_moy_fullness0 = sum(size_mm*fullness0)/sum(fullness0),
    size_moy_fullness1_29 = sum(size_mm*fullness1_29)/sum(fullness1_29),
    size_moy_fullness30_59 = sum(size_mm*fullness30_59)/sum(fullness30_59),
    size_moy_fullness60_89 = sum(size_mm*fullness60_89)/sum(fullness60_89),
    size_moy_fullness90_100 = sum(size_mm*fullness90_100)/sum(fullness90_100),
    count_fullness0 = sum(fullness0),
    count_fullness1_29 = sum(fullness1_29),
    count_fullness30_59 = sum(fullness30_59),
    count_fullness60_89 = sum(fullness60_89),
    count_fullness90_100 = sum(fullness90_100)) 

df_global <- left_join(df_global, fullness_simplified, by = "year")

df_global_long <- pivot_longer(df_global, cols = c(legal_males, adu_fem, juv_fem, juv_males,total_crabs), names_to = "crab_category", values_to = "count")


# Carte île Kodiak
survey_map <- survey
survey_map$year <- as.factor(survey_map$year)
survey_map$legal_males <- survey_map$post_recruit + survey_map$recruit_males
survey_map$Total_crabs <- rowSums(survey_map[, 7:14], na.rm = TRUE) # calcul du nb total de crabes attrapés
survey_map_count <- survey_map |>
  group_by(year) |>
  summarise(Nb_legal_males = sum(legal_males))
survey_map$fishing_district <- as.factor(survey_map$fishing_district)

```

# Introduction
## King Crab
### Ecologie

Le crabe royal du Kamtchatka, également connu sous le nom de red king crab, est une espèce de crustacé décapode appartenant à la famille des Lithodidae. On les trouve dans les eaux froides de l'océan Pacifique Nord, principalement dans les régions proches de l'Alaska, de la Russie et du Japon. Ils préfèrent les fonds marins riches en nutriments à des profondeurs allant jusqu'à plusieurs centaines de mètres. Ces crustacés ont une carapace dure et massive, pouvant atteindre une envergure importante. Ils se caractérisent par leurs pinces robustes et puissantes, utilisées pour la capture de proies et la défense. Leur régime alimentaire varie, mais il inclut généralement des mollusques, des petits poissons et d'autres organismes marins.


### Pèche
 Le King Crab d'Alaska est célèbre pour sa chair délicate et savoureuse, ce qui en fait une espèce très prisée dans le secteur de la pêche commerciale. La pêche au crabe royal est une activité économiquement importante pour les communautés côtières de l'Alaska, de la Russie et d'autres régions où ces crustacés sont abondants. Ils sont exportés dans le monde entier pour répondre à la demande croissante de fruits de mer de qualité. La chair ferme et sucrée du King Crab en fait un produit recherché sur le marché international. De ce fait, une gestion durable de la pêche au crabe royal est cruciale pour préserver les populations et les écosystèmes marins. Des mesures de conservation strictes sont mises en œuvre pour assurer la durabilité de cette ressource précieuse. Pour pouvoir instaurer un quota de pêche chaque année, le Département de la Pêche et du Jeu de l'Alaska réalise un important échantillonnage des crabes dans les zones de pêche.
 
## Zone d'étude
La zone d'étude dans laquelle ont été collectées les données mises à notre disposition est l'archipel de Kodiak, situé au sud de l'Alaska, au nord de l'océan Pacifique. Les îles Kodiak s'étendent sur environ 9 300 kilomètres carrés avec une topographie variée, comprenant des montagnes, des fjords, des rivières et des vallées. La pêche y joue un rôle essentiel dans l'économie, la région est particulièrement connue pour sa pêche au saumon, au crabe et à d'autres fruits de mer.

La carte ci-dessous représente l'île et l'emplacement des différents points de collecte en fonction des années (données provenant du fichier `survey` et `map`). Les zones de pêches sont organisées en quatre districts autour de l’île. Chaque point représente un échantillonnage (une ligne de pêche composées de plusieurs casiers), la taille des points est proportionnelle au nombre de crabes échantillonnés.


```{r Carte île Kodiak, echo = F, out.width = "75%", out.height = "75%"}
# Créer un graphique de base avec Plotly
base_plot <- plot_ly() |>
  add_trace(
    data = kodiak,
    x = ~-longitude,
    y = ~latitude,
    type = 'scatter',
    mode = 'lines',
    line = list(color = 'black'),
    showlegend = FALSE
  ) |>
  layout(
    xaxis = list(title = "Longitude"),
    yaxis = list(title = "Latitude"),
    title = "Carte de l'île Kodiak représentant 
les échantillonnages de crabes de 1973 à 1986"
  )

# Créer une liste pour stocker les données de chaque année
data_by_year <- lapply(unique(survey_map$year), function(yr) {
  survey_map_year <- subset(survey_map, year == yr)
  list(
    x = -survey_map_year$longitude_halfway_pot,
    y = survey_map_year$latitude_halfway_pot,
    size = survey_map_year$Total_crabs,
    color = survey_map_year$fishing_district,
    text = paste("Année: ", yr, "<br>Nombre de crabes échantillonnés: ", survey_map_year$Total_crabs)
  )
})

# Ajouter les données de chaque année au graphique de base pour chaque frame
for (i in seq_along(data_by_year)) {
  base_plot <- base_plot |>
    add_trace(
      data = data_by_year[[i]],
      x = ~x,
      y = ~y,
      type = 'scatter',
      mode = 'markers',
      size = ~size,
      color = ~color,
      text = ~text,
      frame = unique(survey_map$year)[i]
    )
}

base_plot |>
  animation_opts(frame = 500, redraw = TRUE, transition = 0) |>
  animation_slider(
    currentvalue = list(prefix = "Année: "),
    steps = lapply(
      seq_along(data_by_year),
      function(i) list(
        label = unique(survey_map$year)[i],
        method = "animate",
        args = list(list("frame", list(duration = 0)), list("transition", list(duration = 0)))
      )
    )
  ) |>
  layout(
    hovermode = "closest", # Afficher les informations au survol du point le plus proche
    hoverinfo = "text"     # Afficher les informations définies dans 'text' au survol
  )

```
## Jeux de donnée

### Provenance des données
Tous les ensembles de données, sauf la salinité (`salinity`) et la température (`celsius`), ont été fournis par le Département de la Pêche et du Jeu de l'Alaska. Les données de salinité et de température proviennent de Tom Royer de l’Institut des Sciences Marines à l’Université d'Alaska à Fairbanks,. Il y a aussi des statistiques sur la flotte de pêche et les captures commerciales (`fleet` et `catch`), pour chaque année entre 1960 et 1982. Certaines données de pêche sont réparties par district (les 4 zones colorées sur la carte). Cette période est intéressante car elle entoure un événement majeur qui est le tremblement de terre de 1964 qui a touché l'île avec un séisme de magnitude 9.1. Ainsi, ces données ont peut-être été prises dans l'optique de surveiller la zone suite à cet incident.

### Modifications apportées
Avant toute chose, de nombreuses modifications ont été nécessaires pour rendre les données exploitables. Il a fallu ranger, organiser et transformer les données afin de pouvoir les visualiser graphiquement et les analyser statistiquement. 
Nous avons également regroupé le plus possible l’ensemble des jeux de donnée et calculé des moyennes annuelles lorsque les données disponibles étaient exprimées par année. Nous avons également ajouté des saisons aux mesures de salinité et de température afin de prendre en compte la variation de température pendant ces périodes.

De nouvelles variables sont également créées, telles que le nombre total de crabes identifiés dans le document `survey `(une simple somme de tous les crabes identifiés sur une année) ou encore un regroupement de tous les crabes mâles dits "pre-recruits", définis comme des juvéniles qui ne peuvent pas être légalement pêchés.

Afin de prendre en compte l’effort de pêche qui peut varier, nous avons divisé le nombre de crabes de chaque catégorie par le nombre de casiers utilisés pour chaque échantillon de `survey`. Nous avons ensuite calculé pour chaque année dans un premier temps la somme de ces valeurs pour obtenir un nombre de crabes corrigés par l’effort de pêche puis une moyenne de crabes par casiers (`per_pot`). Une simple régression linéaire nous a permis de déterminer que ces deux variables sont corrélées de manière très significative et ainsi que nous pourrions utiliser l’une des deux variables sans avoir de différence importante dans les résultats.

```{r Test de méthode de correction, echo = F, eval = F}

ggplot(df_global, aes(x = legal_males, y = legal_males_pp))+ # on regarde si on a une différence entre le nb de crabes corrigés et le nb de crabes moyen par piège
  geom_point()+
  geom_smooth(method = "lm", color = "red")+
  labs(x = "Nombre de mâles pouvant être légalement pêchés", y = "Nombre de mâles pouvant être légalement pêchés moyen par piège")
test <- lm(legal_males~legal_males_pp, data = df_global)
summary(test) # on remarque que c'est très fortement correlé donc pas de grosse différence si on choisit l'un ou l'autre

```


## Observations préliminaires
Dans l'optique de mieux comprendre nos données et de voir l'évolution des différents paramètres au cours du temps, nous avons procédé à quelques observations préliminaires. Cela permet de dégager les tendances observées dans nos données et ainsi de nous poser les bonnes questions puis d'y répondre à l'aide de modèles statistiques. Ci-dessous vous trouverez donc quelques graphiques représentant des données intéressantes.

```{r Graphique préliminiare, echo=F}


plot_count_year <-ggplot(df_global_long, aes(x = year, y = count, color = crab_category, group = crab_category)) +
  geom_point() +
  geom_line() +
  labs(title = paste("Nombre de crabes échantillonnés par année \n (corrigé par l'effort d'échantillonnage)"), x = "Année", y = "Nombre de crabes échantillonnés (corrigé par l'effort d'échantillonnage)", color = "Classe d'âge et sexe") +
  scale_colour_manual(values =  brewer.pal(5, "Set1"), labels = c("Femelles adultes", "Femelles juvéniles", "Mâles juvéniles", "Mâles légaux", "Total")) +
  theme(axis.title.y = element_blank(), plot.title = element_text(hjust = 0.1)) 



plot_len_year <- ggplot(dstns_simplified_long, aes(x = year, y = length_moy, colour = sex)) +
  geom_point() +
  labs(title = "Taille des Crabes mâles et femelles au
       cours du temps") +  # Correction ici
  geom_smooth(method = "lm", se = FALSE) +
  theme(axis.title.y = element_blank(), plot.title = element_text(hjust = 0.1))


plot_price_year <- df_global |>
 filter(year >= 1973L & year <= 1982L) |>
 ggplot() + aes(x = year, y = price_pound) +
  geom_point()+
  geom_line() +  # Ajout des lignes
  labs(x = "Année", y = "Prix par livre", title = "Évolution du prix par livre au fil des années") +
  theme(axis.title.y = element_blank(), plot.title = element_text(hjust = 0.5))

plot_pot_lifted_year <- fleet |>
  filter(year >= 1964L & year <= 1982L) |>
  ggplot() +
  aes(x = year, y = total_pot_lifts) +
  geom_point(shape = "circle", size = 1.5, colour = "#112446") +
  labs(title = "Nombres total de casier soulevés par année
       (effort de pêche)")+
  geom_smooth(method = "lm",se = FALSE, color = "#99CC33") +
  theme(axis.title.y = element_blank(),plot.title = element_text(hjust = 0.5))
  

# Afficher les graphiques dans une disposition de grille (2 lignes, 2 colonnes)
grid.arrange(plot_count_year , plot_len_year , plot_price_year ,plot_pot_lifted_year , ncol = 2, nrow = 2)

```

La population totale de crabes subit de fortes variations au cours du temps avec des pics importants et une décroissance critique entre 1980 et 1986, La taille des crabes, qu'ils soient mâles ou femelles, semble être en augmentation, malgré une période de diminution entre 1975 et 1978. Quand au prix des crabes à la livre, il subit une très forte augmentation à partir des années 1980, ce qui correspond à la raréfaction de la ressource due à la diminution de la population observée plus tôt sur cette période là. Enfin on remarque que 


## Problématiques
Suite à ces observations, plusieurs questions nous sont apparues.

Question 1 : Comment l'habitat du crabe royal du Kamtchatka évolue-t-il au fil du temps ? 

Question 2 : Ces modifications environnementales affectent-elles la taille des crabes royaux du Kamtchatka ? 


# Résultats
## Question 1
### Température
On veut donc tester si des variables abiotiques comme la température et la salinité des eaux autour des îles Kodiak varient avec le temps. Tout d’abord visualisons ces données graphiquement :

```{r Graphiques température et salinité en fonction de l\'année et de la saison, echo=F}
plot_temp_year<-ggplot(celsius, aes(x = year, y = temp, color = saison))+
  geom_point()+
  labs(title = "Température (°C)")+
  labs(x = "Année", y = "Température de l'eau à 100m de profondeur (en °C)", color = "Saison")+
  geom_smooth(method="lm", se=F)+
theme(legend.position = "none",axis.title.y = element_blank(),plot.title = element_text(hjust = 0.5))

plot_sal_year<-ggplot(salinity, aes(x = year, y = salinity, color = saison))+
  geom_point()+
    labs(title = "Salinité (ppt)")+
  labs(x = "Année", y = "Salinité de l'eau à 100m de profondeur (en parties par milliers)", color = "Saison")+
  theme(legend.position = c(0.95, 0.74), 
        legend.justification = c(1, 0),
        axis.title.y = element_blank(),
        plot.title = element_text(hjust = 0.5))+
  geom_smooth(method="lm", se=F) 

grid.arrange(plot_temp_year, plot_sal_year, ncol = 2, nrow = 1)
```

L'objectif de notre étude est d'évaluer l'existence d'une corrélation statistiquement significative entre la température des eaux autour des îles Kodiak et  les variables temporelles (année et saison), et leurs interactions potentielles. De même pour la salinité. Pour cela nous avons réalisé des analyses de la covariance (ANCOVA) :

```{r ANCOVA - température en fonction de l’année et de la saison (avec et sans interaction), echo=T}
# avec interaction
ancova_temp_inter <- lm(temp ~ year*saison, data = celsius)
# sans interaction
ancova_temp <- lm(temp ~ year + saison, data = celsius)
```

```{r Test des résidus, echo=T,fig.show='hide',results='hide'}
# test de Shapiro sur les deux modèles
shapiro.test(ancova_temp_inter$residuals)
shapiro.test(ancova_temp$residuals)
par(mfrow=c(2,2))
plot(ancova_temp_inter)
plot(ancova_temp)
```
Les tests de Shapiro ne sont pas significatifs (avec interaction : `p-value = 0.3044`
 et sans interaction :  `p-value = 0.57`) et l’observation du graphique quantile-quantile des résidus nous confirment que nos résidus sont normaux, nos conditions sont donc réunies et nous pouvons donc passer à la suite du test. 

```{r Comparaison des modèles, echo=T,results='hide'}
AIC(ancova_temp_inter, ancova_temp) # + AIC faible, mieux c'est : sans interaction mieux
BIC(ancova_temp_inter, ancova_temp) # + BIC faible, mieux c'est : sans interaction mieux
anova(ancova_temp_inter, ancova_temp) # + RSS faible, mieux c'est : pas de différence significative donc on prend le modèle le plus simple : sans interaction
# meilleure p-value pour le modèle sans interaction
# On utilise donc le modèle sans interaction
```
La comparaison du modèle avec ou sans intéraction nous dirige vers le modèle sans intéraction. On peut ainsi le formuler : 

Pour tout $i$ allant de 1 à 13, et $j$ allant de 1 à 4  on suppose que $y_{ij}$ est la réalisation d'une variable aléatoire $Y_{ij}$ représentent la température telle que:

$$Y_{ij} = \beta_{0}+\beta_{1}*\alpha_{i} + \beta_{2}*\gamma_{j}+ E_{ijk}$$
avec : 
$$E_{ijk} \overset{i.i.d}{\sim} \mathcal{N}(0, \sigma^2)$$
où:

- $\alpha_{i}$ et $\gamma_{j}$ sont respectivement les années, les saisons
- $E_k$ est une variable aléatoire:
    - D'espérance égale à 0;
    - De variance égale à $\sigma^2$, qui est un paramètre inconnu;
    - De loi normale.
```{r Test de l’ANCOVA,echo=T}
anova(ancova_temp)
```
Dans l'analyse effectuée avec R pour notre modèle, nous observons que les variables 'année' et 'saison' ont un impact significatif sur la température. Ceci est démontré par des valeurs de p extrêmement basses (pour l'année : `p-value = 0,0002174` et pour la saison : `p-value = 3,348e-16`). Ces résultats suggèrent une variation saisonnière claire de la température. De plus, ils indiquent une tendance progressive à l'augmentation de la température au fil des années. Cette tendance pourrait être potentiellement liée au changement climatique, bien que des études supplémentaires soient nécessaires pour établir une relation causale solide entre ces observations et le changement climatique global.
L'estimation ponctuelle pour le coefficient X, tel que défini dans notre modèle, est de X, valeurs obtenues grâce à l’ajustement du modèle dans `R`.


### Salinité
```{r ANCOVA - salinité en fonction de l’année et de la saison (avec interaction),echo=T,fig.show='hide'}
# avec interaction
ancova_salinity_inter <- lm(salinity ~ year*saison, data = salinity)
```
```{r Test des résidus n2, echo=T,fig.show='hide',results='hide'}
shapiro.test(ancova_salinity_inter$residuals)
par(mfrow=c(2,2))
plot(ancova_salinity_inter )
```

D’après le test de Shapiro sur les résidus ainsi que l’observation du Q-Qplot résidus, les résidus ne sont pas normaux, on normalise donc la salinité pour chaque saison avec la fonction `boxcox` du package `bestNormalize` :

```{r Normalisation de la salinité pour chaque saison,echo=T}
salinity_normalized <- salinity |> 
  group_by(saison) |> 
  mutate(salinity_norm = boxcox(salinity)$x.t,
         lambda = boxcox(salinity)$lambda)
```
On reformule donc deux modèles d’analyse de la variance (ANCOVA) avec les données normalisées et on les teste à nouveau.
```{r ANCOVA - salinité normalisée en fonction de l’année et de la saison (avec et sans interaction),echo=T,results='hide'}
ancova_salinity_inter_normalized <- lm(salinity_norm ~ year*saison, data = salinity_normalized) # avec interaction 
ancova_salinity_normalized <- lm(salinity_norm ~ year + saison , data = salinity_normalized) # sans interaction normalisée
```
```{r Test des hypothèses des 2 ANCOVA (avec ou sans interaction), echo=F,results='hide',fig.show='hide'}
shapiro.test(ancova_salinity_inter_normalized$residuals)
shapiro.test(ancova_salinity_normalized$residuals)
par(mfrow=c(2,2))
plot(ancova_salinity_inter_normalized)
plot(ancova_salinity_normalized)
```
On compare le modèle avec interaction et le modèle sans interaction pour déterminer celui que l’on sélectionnera. 

```{r Comparaison des 2 modèles,echo=F,results='hide'}
AIC(ancova_salinity_normalized, ancova_salinity_inter_normalized) # + AIC faible, mieux c'est : sans interaction mieux
BIC(ancova_salinity_normalized, ancova_salinity_inter_normalized) # + BIC faible, mieux c'est : sans interaction mieux
anova(ancova_salinity_normalized, ancova_salinity_inter_normalized) # + RSS faible, mieux c'est : pas de différence significative donc on prend le modèle le plus simple : sans interaction
# p-value plus faible pour le modèle sans interaction
# on choisit donc le modèle sans interaction
```
La comparaison du modèle avec ou sans intéraction nous dirige vers le modèle sans intéraction. On peut alors le formuler de la manière suivante : 

Pour tout $i$ allant de 1 à 13, et $j$ allant de 1 à 4  on suppose que $y_{ij}$ est la réalisation d'une variable aléatoire $Y_{ij}$ représentent la salinité telle que:

$$Y_{ij} = \beta_{0}+\beta_{1}*\alpha_{i} + \beta_{2}*\gamma_{j} + E_{ijk}$$
avec : 
$$E_{ijk} \overset{i.i.d}{\sim} \mathcal{N}(0, \sigma^2)$$
où:

- $\alpha_{i}$ et $\gamma_{j}$ sont respectivement les années, les saisons 
- $E_k$ est une variable aléatoire:
    - D'espérance égale à 0;
    - De variance égale à $\sigma^2$, qui est un paramètre inconnu;
    - De loi normale.

```{r Test de l’ANCOVA salinité, echo=T}
anova(ancova_salinity_normalized) 
```
Pour ce modèle, les résultats de la sortie R révèlent que la variable 'année' a un effet statistiquement significatif sur la salinité (`p-value de 0.001059`). En revanche, la variable 'saison' ne montre pas d’effet significatif (`p-value de 0.991987`). Ces résultats suggèrent que la salinité varie en fonction des années, ce qui pourrait être une conséquence du changement climatique. Cependant, il n'y a pas de variation significative de la salinité d'une saison à l'autre selon les données analysées.

## Question 2

# Discussion / Ouverture
Le changement climatique est un problème majeur de notre siècle, dont l'origine anthropique est désormais prouvée. L'augmentation des températures des océans en fait partie et impacte grandement l'écologie des espèces marines. C'est pourquoi, dans cette étude, nous avons voulu montrer que les îles Kodiak sont également touchées par ce changement des conditions abiotiques et qu'elles ont un impact sur le crabe royal du Kamtchatka, une ressource importante pour la pêche dans cette zone.

La première partie de notre étude a clairement montré une augmentation significative des températures au cours des années et avec des variations au cours des saisons et une diminution significative de la salinité de cette zone entre 1973 et 1986. 

C'est pourquoi nous avons ensuite cherché à observer si ces modifications ont un impact significatif sur la taille des crabes.

Il est intéressant de noter que les observations ont été faites il y a 40 ans ou plus, et que la situation a probablement beaucoup évolué depuis. Il serait donc intéressant de continuer la les échantillonnages et de les comparer. De plus, nous n'avons pas abordé ici l'impact de la pêche qui peut être très intéressant.
C'est un problème multifactoriel qui nécessite plus d'approfondissement pour être compris et pour permettre une conservation du milieu et de cette espèce.


Il serait utile d'ajouter le district comme variable supplémentaire dans nos analyses de covariance portant sur la température et la salinité, afin d'examiner si certains secteurs sont plus ou moins influencés par les courants autour de l'île.





